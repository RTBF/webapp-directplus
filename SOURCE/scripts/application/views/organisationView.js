// Generated by CoffeeScript 1.4.0
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['jquery', 'backbone', 'application/views/conferenceView'], function($, Backbone, ConferenceView) {
  var OrganisationView;
  return OrganisationView = (function(_super) {

    __extends(OrganisationView, _super);

    function OrganisationView() {
      return OrganisationView.__super__.constructor.apply(this, arguments);
    }

    OrganisationView.prototype.tagName = 'li';

    OrganisationView.prototype.className = 'organisation';

    OrganisationView.prototype.events = {
      'click .org-item': 'choose'
    };

    OrganisationView.prototype.template = _.template($('#Organisation-template').html());

    OrganisationView.prototype.initialize = function() {
      return this.listenTo(this.model, 'change:conferencesC', this.render);
    };

    OrganisationView.prototype.render = function() {
      $('.confList').children().remove();
      console.log("Je suis lorganisation et je me renderer");
      this.$el.html(this.template(this.model.toJSON()));
      this.model.get('conferencesC').each(function(conference) {
        var conferenceView;
        conferenceView = new ConferenceView({
          model: conference
        });
        return $('.confList').append(conferenceView.render().el);
      });
      return this;
    };

    OrganisationView.prototype.choose = function(ev) {
      var id;
      console.log(ev.target);
      id = $(ev.target).attr('id');
      return Backbone.history.navigate('/conference/orgid', {
        trigger: true
      });
    };

    return OrganisationView;

  })(Backbone.View);
});
