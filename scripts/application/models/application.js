// Generated by CoffeeScript 1.4.0

define(['application/routes/router', 'application/models/slide', 'application/collections/slides', 'application/views/appView', 'vendors/socketio/socketio'], function(Router, Slide, SlidesList, AppView) {
  /*
      Gere les communication serveur
  */

  var Application;
  return Application = (function() {

    function Application() {
      this.router = new Router();
      this.socket = null;
    }

    Application.prototype.init = function() {
      var _this = this;
      this.socket = io.connect('http://localhost:3000');
      this.router.on('orgRoute', function() {
        return _this.connect();
      });
      this.router.on('confRoute', function(data) {
        return _this.socket.emit('organisationChoosed', data);
      });
      this.router.on('slideRoute', function(data) {
        console.log('app slideRoute id conf choosed: ', data);
        return _this.socket.emit('conferenceChoosed', data);
      });
      this.socket.on('organisations', function(data) {
        console.log('app organisations recieved: ', data);
        return _this.router.app.trigger("organisations", data);
      });
      this.socket.on('conferences', function(data) {
        console.log("app confList received", data);
        return _this.router.app.trigger('conferences', data);
      });
      this.socket.on('slides', function(data) {
        console.log('app slides received', data);
        return _this.router.app.trigger('slides', data);
      });
      this.socket.on('snext', function(data) {
        console.log("snext received");
        return _this.router.app.trigger('newSlide', data);
      });
      this.socket.on('sremove', function(data) {
        console.log("remove ask received");
        return _this.router.app.trigger('sremove', data);
      });
      this.socket.on('sreset', function(data) {
        console.log("reseting");
        localStorage.clear();
        $('#SlideList').empty();
        return _this.router.app.trigger('reseting', data);
      });
      this.socket.on('connect', function(data) {
        console.log("connected");
        return _this.router.mainView.trigger('ServerConnection', data);
      });
      return this.connect();
    };

    Application.prototype.connect = function() {
      return this.socket.emit('user', '');
    };

    return Application;

  })();
});
